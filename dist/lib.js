function c(n){return n.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function u(n,...t){let e=[];for(let s=0;s<n.length;s++){e.push(c(n[s]));let r=t[s];typeof r=="string"?e.push(c(r)):r instanceof RegExp&&e.push(r.source)}if(!e[0].startsWith("#/"))throw new Error(`Routes must start with "#/"; route is ${e.join("")}`);return new RegExp(`^${e.join("")}$`)}function p(n){return new RegExp(`(?<${n}>\\w+)`)}var o=class{#t=new Map;#s=void 0;#e=void 0;constructor(t){this.#e=t?.startAt}connect(){return addEventListener("popstate",()=>{this.#n()}),this.#e&&!location.hash?location.hash=this.#e:this.#n(),this}on(t,e){return this.#t.set(t,e),this}off(t){return this.#t.delete(t),this}fallback(t){return this.#s=t,this}#n(t=location.hash){let e,s,r,a;for(let[i,h]of this.#t.entries())if(typeof i=="string"&&t===i?s=h:i instanceof RegExp&&(r=t.match(i))&&(a={...r.groups},s=h),s){e=i;break}let f={url:t,params:a??{},route:e};(s??this.#s)?.(f)}};export{o as default,p as param,u as route};
